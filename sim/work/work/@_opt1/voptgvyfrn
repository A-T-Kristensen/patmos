library verilog;
use verilog.vl_types.all;
entity Execute is
    port(
        clk             : in     vl_logic;
        reset           : in     vl_logic;
        io_ena          : in     vl_logic;
        io_flush        : in     vl_logic;
        io_brflush      : out    vl_logic;
        io_decex_pc     : in     vl_logic_vector(29 downto 0);
        io_decex_base   : in     vl_logic_vector(29 downto 0);
        io_decex_relPc  : in     vl_logic_vector(29 downto 0);
        io_decex_pred_1 : in     vl_logic_vector(3 downto 0);
        io_decex_pred_0 : in     vl_logic_vector(3 downto 0);
        io_decex_aluOp_1_func: in     vl_logic_vector(3 downto 0);
        io_decex_aluOp_1_isMul: in     vl_logic;
        io_decex_aluOp_1_isCmp: in     vl_logic;
        io_decex_aluOp_1_isPred: in     vl_logic;
        io_decex_aluOp_1_isBCpy: in     vl_logic;
        io_decex_aluOp_1_isMTS: in     vl_logic;
        io_decex_aluOp_1_isMFS: in     vl_logic;
        io_decex_aluOp_0_func: in     vl_logic_vector(3 downto 0);
        io_decex_aluOp_0_isMul: in     vl_logic;
        io_decex_aluOp_0_isCmp: in     vl_logic;
        io_decex_aluOp_0_isPred: in     vl_logic;
        io_decex_aluOp_0_isBCpy: in     vl_logic;
        io_decex_aluOp_0_isMTS: in     vl_logic;
        io_decex_aluOp_0_isMFS: in     vl_logic;
        io_decex_predOp_1_func: in     vl_logic_vector(1 downto 0);
        io_decex_predOp_1_dest: in     vl_logic_vector(2 downto 0);
        io_decex_predOp_1_s1Addr: in     vl_logic_vector(3 downto 0);
        io_decex_predOp_1_s2Addr: in     vl_logic_vector(3 downto 0);
        io_decex_predOp_0_func: in     vl_logic_vector(1 downto 0);
        io_decex_predOp_0_dest: in     vl_logic_vector(2 downto 0);
        io_decex_predOp_0_s1Addr: in     vl_logic_vector(3 downto 0);
        io_decex_predOp_0_s2Addr: in     vl_logic_vector(3 downto 0);
        io_decex_jmpOp_branch: in     vl_logic;
        io_decex_jmpOp_target: in     vl_logic_vector(29 downto 0);
        io_decex_jmpOp_reloc: in     vl_logic_vector(31 downto 0);
        io_decex_memOp_load: in     vl_logic;
        io_decex_memOp_store: in     vl_logic;
        io_decex_memOp_hword: in     vl_logic;
        io_decex_memOp_byte: in     vl_logic;
        io_decex_memOp_zext: in     vl_logic;
        io_decex_memOp_typ: in     vl_logic_vector(1 downto 0);
        io_decex_stackOp: in     vl_logic_vector(2 downto 0);
        io_decex_rsAddr_3: in     vl_logic_vector(4 downto 0);
        io_decex_rsAddr_2: in     vl_logic_vector(4 downto 0);
        io_decex_rsAddr_1: in     vl_logic_vector(4 downto 0);
        io_decex_rsAddr_0: in     vl_logic_vector(4 downto 0);
        io_decex_rsData_3: in     vl_logic_vector(31 downto 0);
        io_decex_rsData_2: in     vl_logic_vector(31 downto 0);
        io_decex_rsData_1: in     vl_logic_vector(31 downto 0);
        io_decex_rsData_0: in     vl_logic_vector(31 downto 0);
        io_decex_rdAddr_1: in     vl_logic_vector(4 downto 0);
        io_decex_rdAddr_0: in     vl_logic_vector(4 downto 0);
        io_decex_immVal_1: in     vl_logic_vector(31 downto 0);
        io_decex_immVal_0: in     vl_logic_vector(31 downto 0);
        io_decex_immOp_1: in     vl_logic;
        io_decex_immOp_0: in     vl_logic;
        io_decex_wrRd_1 : in     vl_logic;
        io_decex_wrRd_0 : in     vl_logic;
        io_decex_callAddr: in     vl_logic_vector(31 downto 0);
        io_decex_call   : in     vl_logic;
        io_decex_ret    : in     vl_logic;
        io_decex_brcf   : in     vl_logic;
        io_decex_trap   : in     vl_logic;
        io_decex_xcall  : in     vl_logic;
        io_decex_xret   : in     vl_logic;
        io_decex_xsrc   : in     vl_logic_vector(4 downto 0);
        io_decex_nonDelayed: in     vl_logic;
        io_decex_illOp  : in     vl_logic;
        io_exmem_rd_1_addr: out    vl_logic_vector(4 downto 0);
        io_exmem_rd_1_data: out    vl_logic_vector(31 downto 0);
        io_exmem_rd_1_valid: out    vl_logic;
        io_exmem_rd_0_addr: out    vl_logic_vector(4 downto 0);
        io_exmem_rd_0_data: out    vl_logic_vector(31 downto 0);
        io_exmem_rd_0_valid: out    vl_logic;
        io_exmem_mem_load: out    vl_logic;
        io_exmem_mem_store: out    vl_logic;
        io_exmem_mem_hword: out    vl_logic;
        io_exmem_mem_byte: out    vl_logic;
        io_exmem_mem_zext: out    vl_logic;
        io_exmem_mem_typ: out    vl_logic_vector(1 downto 0);
        io_exmem_mem_addr: out    vl_logic_vector(31 downto 0);
        io_exmem_mem_data: out    vl_logic_vector(31 downto 0);
        io_exmem_mem_call: out    vl_logic;
        io_exmem_mem_ret: out    vl_logic;
        io_exmem_mem_brcf: out    vl_logic;
        io_exmem_mem_trap: out    vl_logic;
        io_exmem_mem_xcall: out    vl_logic;
        io_exmem_mem_xret: out    vl_logic;
        io_exmem_mem_xsrc: out    vl_logic_vector(4 downto 0);
        io_exmem_mem_illOp: out    vl_logic;
        io_exmem_mem_callRetAddr: out    vl_logic_vector(31 downto 0);
        io_exmem_mem_callRetBase: out    vl_logic_vector(31 downto 0);
        io_exmem_mem_nonDelayed: out    vl_logic;
        io_exmem_pc     : out    vl_logic_vector(29 downto 0);
        io_exmem_base   : out    vl_logic_vector(29 downto 0);
        io_exmem_relPc  : out    vl_logic_vector(29 downto 0);
        io_exicache_doCallRet: out    vl_logic;
        io_exicache_callRetBase: out    vl_logic_vector(31 downto 0);
        io_exicache_callRetAddr: out    vl_logic_vector(31 downto 0);
        io_feex_pc      : in     vl_logic_vector(29 downto 0);
        io_exResult_1_addr: in     vl_logic_vector(4 downto 0);
        io_exResult_1_data: in     vl_logic_vector(31 downto 0);
        io_exResult_1_valid: in     vl_logic;
        io_exResult_0_addr: in     vl_logic_vector(4 downto 0);
        io_exResult_0_data: in     vl_logic_vector(31 downto 0);
        io_exResult_0_valid: in     vl_logic;
        io_memResult_1_addr: in     vl_logic_vector(4 downto 0);
        io_memResult_1_data: in     vl_logic_vector(31 downto 0);
        io_memResult_1_valid: in     vl_logic;
        io_memResult_0_addr: in     vl_logic_vector(4 downto 0);
        io_memResult_0_data: in     vl_logic_vector(31 downto 0);
        io_memResult_0_valid: in     vl_logic;
        io_exfe_doBranch: out    vl_logic;
        io_exfe_branchPc: out    vl_logic_vector(29 downto 0);
        io_exsc_op      : out    vl_logic_vector(2 downto 0);
        io_exsc_opData  : out    vl_logic_vector(31 downto 0);
        io_exsc_opOff   : out    vl_logic_vector(31 downto 0);
        io_scex_stackTop: in     vl_logic_vector(31 downto 0);
        io_scex_memTop  : in     vl_logic_vector(31 downto 0)
    );
end Execute;
