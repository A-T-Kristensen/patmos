library verilog;
use verilog.vl_types.all;
entity Memory is
    port(
        clk             : in     vl_logic;
        reset           : in     vl_logic;
        io_ena_out      : out    vl_logic;
        io_ena_in       : in     vl_logic;
        io_flush        : out    vl_logic;
        io_exmem_rd_1_addr: in     vl_logic_vector(4 downto 0);
        io_exmem_rd_1_data: in     vl_logic_vector(31 downto 0);
        io_exmem_rd_1_valid: in     vl_logic;
        io_exmem_rd_0_addr: in     vl_logic_vector(4 downto 0);
        io_exmem_rd_0_data: in     vl_logic_vector(31 downto 0);
        io_exmem_rd_0_valid: in     vl_logic;
        io_exmem_mem_load: in     vl_logic;
        io_exmem_mem_store: in     vl_logic;
        io_exmem_mem_hword: in     vl_logic;
        io_exmem_mem_byte: in     vl_logic;
        io_exmem_mem_zext: in     vl_logic;
        io_exmem_mem_typ: in     vl_logic_vector(1 downto 0);
        io_exmem_mem_addr: in     vl_logic_vector(31 downto 0);
        io_exmem_mem_data: in     vl_logic_vector(31 downto 0);
        io_exmem_mem_call: in     vl_logic;
        io_exmem_mem_ret: in     vl_logic;
        io_exmem_mem_brcf: in     vl_logic;
        io_exmem_mem_trap: in     vl_logic;
        io_exmem_mem_xcall: in     vl_logic;
        io_exmem_mem_xret: in     vl_logic;
        io_exmem_mem_xsrc: in     vl_logic_vector(4 downto 0);
        io_exmem_mem_illOp: in     vl_logic;
        io_exmem_mem_callRetAddr: in     vl_logic_vector(31 downto 0);
        io_exmem_mem_callRetBase: in     vl_logic_vector(31 downto 0);
        io_exmem_mem_nonDelayed: in     vl_logic;
        io_exmem_pc     : in     vl_logic_vector(29 downto 0);
        io_exmem_base   : in     vl_logic_vector(29 downto 0);
        io_exmem_relPc  : in     vl_logic_vector(29 downto 0);
        io_memwb_rd_1_addr: out    vl_logic_vector(4 downto 0);
        io_memwb_rd_1_data: out    vl_logic_vector(31 downto 0);
        io_memwb_rd_1_valid: out    vl_logic;
        io_memwb_rd_0_addr: out    vl_logic_vector(4 downto 0);
        io_memwb_rd_0_data: out    vl_logic_vector(31 downto 0);
        io_memwb_rd_0_valid: out    vl_logic;
        io_memwb_pc     : out    vl_logic_vector(29 downto 0);
        io_memfe_doCallRet: out    vl_logic;
        io_memfe_callRetPc: out    vl_logic_vector(29 downto 0);
        io_memfe_callRetBase: out    vl_logic_vector(29 downto 0);
        io_memfe_store  : out    vl_logic;
        io_memfe_addr   : out    vl_logic_vector(31 downto 0);
        io_memfe_data   : out    vl_logic_vector(31 downto 0);
        io_exResult_1_addr: out    vl_logic_vector(4 downto 0);
        io_exResult_1_data: out    vl_logic_vector(31 downto 0);
        io_exResult_1_valid: out    vl_logic;
        io_exResult_0_addr: out    vl_logic_vector(4 downto 0);
        io_exResult_0_data: out    vl_logic_vector(31 downto 0);
        io_exResult_0_valid: out    vl_logic;
        io_localInOut_M_Cmd: out    vl_logic_vector(2 downto 0);
        io_localInOut_M_Addr: out    vl_logic_vector(31 downto 0);
        io_localInOut_M_Data: out    vl_logic_vector(31 downto 0);
        io_localInOut_M_ByteEn: out    vl_logic_vector(3 downto 0);
        io_localInOut_S_Resp: in     vl_logic_vector(1 downto 0);
        io_localInOut_S_Data: in     vl_logic_vector(31 downto 0);
        io_globalInOut_M_Cmd: out    vl_logic_vector(2 downto 0);
        io_globalInOut_M_Addr: out    vl_logic_vector(31 downto 0);
        io_globalInOut_M_Data: out    vl_logic_vector(31 downto 0);
        io_globalInOut_M_ByteEn: out    vl_logic_vector(3 downto 0);
        io_globalInOut_M_AddrSpace: out    vl_logic_vector(1 downto 0);
        io_globalInOut_S_Resp: in     vl_logic_vector(1 downto 0);
        io_globalInOut_S_Data: in     vl_logic_vector(31 downto 0);
        io_icacheIllMem : in     vl_logic;
        io_scacheIllMem : in     vl_logic;
        io_exc_call     : out    vl_logic;
        io_exc_ret      : out    vl_logic;
        io_exc_src      : out    vl_logic_vector(4 downto 0);
        io_exc_exc      : out    vl_logic;
        io_exc_excBase  : out    vl_logic_vector(29 downto 0);
        io_exc_excAddr  : out    vl_logic_vector(29 downto 0)
    );
end Memory;
